# Default variables for kojihub role

# Do we need to use specific repo to deploy newer/specific koji pkgs
kojid_kojihub_repo: False
kojid_kojihub_repo_url: http://internal.repo.org/builder/$basearch/
kojid_kojihub_repo_gpgcheck: False
kojid_kojihub_repo_gpgkey: RPM-GPG-KEY-CentOS-Infra

# Database settings
# Remote postgresql host - used for delegated task for db creation and internal config
koji_db_remote: False
koji_db_host: psql.dev.centos.org
# DB settings
koji_db_name: koji
koji_db_user: koji
koji_db_pass: MySQLSuckS


# kojihub/web settings
koji_sitename: CentOS Community Build Service
koji_custom_theme: True
koji_theme: centos
koji_theme_file: koji-theme-centos.tar.gz
koji_hub_url: https://koji.centos.org/kojihub
koji_web_url: https://koji.centos.org/koji
koji_files_url: https://koji.centos.org/kojifiles
koji_hub_secret: aoYvNQPWTb7BieCco1iljBqym # Don't forget to change this before deployment
# Do we want to automatically create users in koji db on succesfull auth (tls or kerberos)
# If not, you have to use a sync tool and group memberships, like fas or fasjson - see below)
koji_create_users: False

# TLS settings for crl
# Where to retrieve the updated CRL file
koji_hub_tls_crl_url: https://accounts.centos.org/ca/crl.pem

# For https frontend so needed despite using kerberos (or not) auth, see below
koji_web_cacert: koji.centos.org-CAChain.crt
koji_web_tls_key: koji.centos.org.key
koji_web_tls_cert: koji.centos.org.crt

# some httpd snipped to eventually inject into httpd vhost
# Nothing defined by default but can be defined like this:
# koji_web_httpd_snippet: |
#   <If "-n %{HTTP:X-Forwarded-For}" >
#    AddOutputFilterByType INFLATE;SUBSTITUTE;DEFLATE text/html
#    Substitute "s|replace_internal_name|public_hostname|in"
#   </If>


# Authentication TLS vs Kerberos
# Set *one* of the koji_auth_tls *or* koji_auth_kerberos boolean to True and so declare needed variables
# TLS auth
koji_auth_tls: True
koji_tls_proxydn: C=NA, ST=NA, O=The CentOS Project, CN=kojihub.cbs.centos.org/emailAddress=user-account-services@centos.org
# Our CA for tls auth
koji_hub_cacert: fas_ca_cert-prod.crt
koji_hub_tls_key: kojihub.centos.org.key
koji_hub_tls_cert: kojihub.centos.org.crt


# Kerberos Auth
koji_auth_kerberos: False
koji_auth_principal: HTTP/stream-hub.dev.centos.org@DEV.CENTOS.ORG
koji_auth_keytab: HTTP-stream-hub.dev.centos.org.keytab
koji_auth_proxyprincipals: HTTP/stream-hub.dev.centos.org@DEV.CENTOS.ORG
koji_auth_realm: DEV.CENTOS.ORG
# for koji web
koji_auth_webprincipal: HTTP/stream-hub.dev.centos.org@DEV.CENTOS.ORG
koji_auth_webkeytab: HTTP-stream-hub.dev.centos.org.keytab


# Do we want to also run kojira
# In case of TLS auth it needs a .pem file and in case of kerberos auth, a keytab
koji_kojira: True
koji_kojira_user: kojira
koji_kojira_tls_pem: kojira.pem # CN has to match with koji_kojira_user defined 
# if kerberos
koji_kojira_principal: koji/kojira@DEV.CENTOS.ORG
koji_kojira_keytab: kojira.keytab # Needed only if koji_auth_kerberos above

# Do we want to also run mash
koji_mash: False


# Storage settings
koji_mountpoint: /mnt/kojishare
koji_nfs_path: nfs-host.domain.com:/exports/kojishare
koji_mnt_symlink_workaround: True

# Do we want to grant permissions based on group membership from FAS/ACO
koji_fas_sync: True
# Where to gather users/group membership from
koji_fas_url: https://accounts.centos.org
koji_fas_user:
koji_fas_pass:

# Instead of using legacy FAS, do we want to use IPA/FASJSON to sync group memberships ?
# It will require also a service keytab to auth against fasjson url endpoint
koji_fasjson_sync: False
koji_fasjson_url: https://fasjson.stg.fedoraproject.org
koji_fasjson_keytab:   # keytab file distributed by this role


# Do we need some SIGs default configs for CBS ?
koji_cbs_sigs_config: False

# Do we need a local admin user on the hub itself ? 
# In case of TLS auth it needs a .pem file and in case of kerberos auth, a keytab
koji_admin_client: True
koji_admin_user: admin
koji_admin_pem: admin.pem
# If using kerberos
koji_admin_principal: koji-admin@DEV.CENTOS.ORG
koji_admin_keytab: koji-admin.keytab # Needed only if koji_auth_kerberos above and vice/versa with TLS

# Kojihub plugins
# Worth knowing that this role supports following plugins:
# - centmsg             # sending to MQTT message broker, already in use in centos infra
# - fedmsg-koji-plugin  # sending to fedora-messaging/rabbitmq, only for specific builders
# - sidetag_hub         # from koji plugins, so nothing to copy/import
# - runroot_hub         # from koji plugins, so nothing to copy/import
# Each plugin can have its own config, see below
# As we'll copy a conf for each, at least ensure there is (even empty) one under templates/koji-hub/plugins/{{ item }}.conf.j2 - see for example runroot_hub.conf.j2

# Do we want to enable plugins on Hub ?
koji_hub_plugins: True
# Custom plugins we'll copy from ansible roles, like centmsg, fedmsg-koji-plugin, not koji built-in plugins
koji_hub_install_plugins: [] 
# Plugins to enable, so can be a mix of built-in plugins and from koji_hub_install_plugins
koji_hub_plugins_list: []
koji_hub_noconfig_plugins_list: []

# Now the plugins settings, if needed
# centmsg / mqtt
koji_hub_plugin_mqtt_host: mqtt.dev.centos.org
koji_hub_plugin_mqtt_topic: koji
koji_hub_plugin_mqtt_excluded_tags: 
  - sclo-testing-tag

# fedmsg-koji-plugin
koji_hub_plugin_fedmsg_tls_ca:
koji_hub_plugin_fedmsg_tls_cert:
koji_hub_plugin_fedmsg_tls_key:
koji_hub_plugin_fedmsg_topic:
koji_hub_plugin_fedmsg_amqp_url: "amqps://koji.prod:@rabbitmq.prod.fedoraproject.org/%2Fpubsub"

# Zabbix/monitoring part
kojihub_zabbix_templates:
  - Template CentOS Koji Hub
  - Template CentOS http server
  - Template CentOS - https SSL Cert Check External
kojihub_zabbix_groups:
  - CentOS CBS koji hosts


